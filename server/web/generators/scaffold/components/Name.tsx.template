import { routes, navigate } from '@redwoodjs/router';
import { useMutation } from '@redwoodjs/web';
import { toast } from '@redwoodjs/web/toast';

import BaseModelView from 'src/components/BaseModelView/BaseModelView';
import {
  formatEnum,
  jsonDisplay,
  timeTag,
  checkboxInputTag,
} from 'src/utils/display-functions';

const DELETE_${singularConstantName}_MUTATION = gql`
  mutation Delete${singularPascalName}Mutation($id: ${idType}!) {
    delete${singularPascalName}(id: $id) {
      id
    }
  }
`;

export default function ${singularPascalName}({ ${singularCamelName} }) {
  const [delete${singularPascalName}] = useMutation(DELETE_${singularConstantName}_MUTATION, {
    onCompleted: () => {
      toast.success('${singularPascalName} deleted');
      navigate(routes.${pluralRouteName}());
    },
    onError: (error) => {
      toast.error(error.message);
    },
  });

  const onDeleteClick = (id) => {
    if (confirm('Are you sure you want to delete ${singularCamelName} ' + id + '?')) {
      delete${singularPascalName}({ variables: { id } });
    }
  };

  const data = [
    <% columns.forEach(column => { %>
      {
        propertyId: '${column.name}',
        label: '${column.label}',
        <% if (column.displayFunction) { %>
          value: ${column.displayFunction}(${singularCamelName}.${column.name}),
        <% } else { %>
          value: ${singularCamelName}.${column.name},
        <% } %>
      },
    <% }) %>
  ];

  return (
    <BaseModelView
      title="${singularPascalName} Detail"
      subtitle={'ID: ' + ${singularCamelName}.id}
      data={data}
      onDelete={() => onDeleteClick(${singularCamelName}.id)}
      onEdit={() => navigate(routes.${editRouteName}({ id: ${singularCamelName}.id }))}
    />
  );
}
